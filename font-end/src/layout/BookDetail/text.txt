    const [showMoreBtn, setShowMoreBtn] = useState(false);

    const ref = useRef(null);

    useEffect(() => {
        if(ref.current) {
            setShowMoreBtn (
                ref.current.scrollHeight !== ref.current.clientHeight
            )
        }
    }, [])

    {
                    showMoreBtn && ()
                }






import React, { useEffect, useState } from "react";
import { Carousel } from "react-responsive-carousel";
import { getAllImageOfTheBooks } from "../../api/ImageBookAPI";
import BookImageModel from "../../models/BookImageModel";

interface BookProps {
    bookId: number;
}

const ImgBookDetail: React.FC<BookProps> = (props) => {
    const bookId: number = props.bookId;

    const [listImgBook, setListImgBook] = useState<BookImageModel[]>([]);
    const [loadingDataImg, setLoadingDataImg] = useState(true);
    const [errorImg, setErrorImg] = useState<string | null>(null);
    const [selectedImage, setSelectedImage] = useState<string | null>(null);

    useEffect(() => {
        getAllImageOfTheBooks(bookId)
            .then((lists) => {
                setListImgBook(lists);
                if (lists.length > 0) {
                    setSelectedImage(lists[0].dataImage ?? ""); // Gán giá trị mặc định nếu `undefined`
                }
                setLoadingDataImg(false);
            })
            .catch((error) => {
                setLoadingDataImg(false);
                setErrorImg(error.message);
            });
    }, [bookId]);

    if (loadingDataImg) {
        return (
            <div id="loadingData">
                <p id="loadingDataImg-text">Đang tải dữ liệu của sách!</p>
            </div>
        );
    }

    if (errorImg) {
        return (
            <div id="errorImg">
                <p id="errorImg-text">
                    Gặp lỗi: <b>{errorImg}</b>
                </p>
            </div>
        );
    }

    return (
        <div id="bdBlock1">
            <div id="bdBlock1_avt-big">
                {selectedImage && (
                    <img
                        src={selectedImage}
                        alt="ảnh bìa sách"
                        id="bdBlock1_avt-img"
                    />
                )}
            </div>
            <div id="bdBlock1_img-small">
                <div className="bdBlock1_img-small">
                    <Carousel showArrows={true} showIndicators={true}>
                        {listImgBook.map((image, index) => (
                            <div
                                className={`bdImg_block ${
                                    selectedImage === image.dataImage
                                        ? "selected"
                                        : ""
                                }`}
                                key={index}
                                onClick={() =>
                                    setSelectedImage(image.dataImage ?? "")
                                } // Gán giá trị mặc định nếu `undefined`
                            >
                                <div className="bdImg_block-img">
                                    <img
                                        src={image.dataImage ?? ""}
                                        alt={`${image.imageName}`}
                                        className="bdImg-img"
                                    />
                                </div>
                            </div>
                        ))}
                    </Carousel>
                </div>
            </div>
        </div>
    );
};

export default ImgBookDetail;
